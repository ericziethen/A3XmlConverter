#pragma once

#include <string>
#include "misc_lib.h"

//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// ENUMS ///////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////

typedef enum 
{
	TRAINER_ENUM_UNKNOWN,
	TRAINER_ENUM_RUF,
	NO_OF_TRAINER_ENUM_TYPES
} TRAINER_ENUM_TYPE;

typedef enum
{
	TRAINER_RUF_UNKNOWN,
	TRAINER_RUF_KUMPELTYP,
	TRAINER_RUF_LUSTIGER_GESELLE,
	TRAINER_RUF_MOTIVATIONSKUENSTLER,
	TRAINER_RUF_PR_MANN,
	TRAINER_RUF_SCHLEIFER,
	TRAINER_RUF_WISSENSCHAFTLER,
	TRAINER_RUF_KEINER,
	NO_OF_TRAINER_RUF_TYPES
} TRAINER_RUF_TYPE;

//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// FUNCTION FORWARD DECLARATIONS ///////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////

ENUM_VALUE_LIST& GetTrainerEnumValueList (TRAINER_ENUM_TYPE, ENUM_VALUE_LIST&);
int GetTrainerEnumValue (int, ENUM_VALUE_SIDE_TYPE, int);
std::string GetNameFromTrainerEnumType (TRAINER_ENUM_TYPE);
std::string GetNameFromTrainerRufType (int);
