#pragma once

#include <string>
#include "boost/assign.hpp"
#include "bimap.h"

//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// ENUMS ///////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////
typedef enum 
{
	VEREIN_ENUM_UNKNOWN,
	VEREIN_ENUM_TRIKOT_FARBE,
	VEREIN_ENUM_TRIKOT_MUSTER,
	VEREIN_ENUM_TRIKOT_RINGELSOCKEN,
	VEREIN_ENUM_KUERZL,
	VEREIN_ENUM_FANAUFKOMMEN,
	VEREIN_ENUM_ARTDERFANS,
	VEREIN_ENUM_VORSTAND,
	VEREIN_ENUM_OPPOSITION,
	VEREIN_ENUM_FINANZKRAFT,
	VEREIN_ENUM_HOOLIGANS,
	VEREIN_ENUM_REGIONALLIGAAB2000,
	NO_OF_VEREIN_ENUM_TYPES
} VEREIN_ENUM_TYPE;

typedef enum
{
	VEREIN_BOOLEAN_UNKNOWN,
	VEREIN_BOOLEAN_POKALMANNSCHAFT,
	VEREIN_BOOLEAN_MEDIENSTADT,
	VEREIN_BOOLEAN_AKTIENGESELLSCHAFT,
	VEREIN_BOOLEAN_RINGELSOCKEN,
	NO_OF_VEREIN_BOOLEAN_TYPES
} VEREIN_BOOLEAN_TYPE;

typedef enum 
{
	VEREIN_TRIKOT_FARBE_UNKNOWN,
	VEREIN_TRIKOT_FARBE_WEISS,
	VEREIN_TRIKOT_FARBE_ROT,
	VEREIN_TRIKOT_FARBE_GELB,
	VEREIN_TRIKOT_FARBE_BLAU,
	VEREIN_TRIKOT_FARBE_HELLGRUEN,
	VEREIN_TRIKOT_FARBE_GRUEN,
	VEREIN_TRIKOT_FARBE_TUERKIS,
	VEREIN_TRIKOT_FARBE_HELLBLAU,
	VEREIN_TRIKOT_FARBE_BRAUN,
	VEREIN_TRIKOT_FARBE_LILA,
	VEREIN_TRIKOT_FARBE_ORANGE,
	VEREIN_TRIKOT_FARBE_SCHWARZ,
	VEREIN_TRIKOT_FARBE_WEINROT,
	NO_OF_VEREIN_TRIKOT_FARBE_TYPES
} VEREIN_TRIKOT_FARBE_TYPE;

typedef enum 
{
	VEREIN_TRIKOT_MUSTER_UNKNOWN,
	VEREIN_TRIKOT_MUSTER_NEUTRAL,
	VEREIN_TRIKOT_MUSTER_LAENGS,
	VEREIN_TRIKOT_MUSTER_QUER,
	VEREIN_TRIKOT_MUSTER_HALB_HALB,
	VEREIN_TRIKOT_MUSTER_SCHULTER,
	VEREIN_TRIKOT_MUSTER_BRUSTRING,
	VEREIN_TRIKOT_MUSTER_AERMEL,
	VEREIN_TRIKOT_MUSTER_MITTELSTR,
	VEREIN_TRIKOT_MUSTER_KARIERT,
	VEREIN_TRIKOT_MUSTER_SCHRAEG,
	NO_OF_VEREIN_TRIKOT_MUSTER_TYPES
} VEREIN_TRIKOT_MUSTER_TYPE;

typedef enum 
{
	VEREIN_TRIKOT_RINGELSOCKEN_UNKNOWN,
	VEREIN_TRIKOT_RINGELSOCKEN_JA,
	VEREIN_TRIKOT_RINGELSOCKEN_NEIN,
	NO_OF_VEREIN_TRIKOT_RINGELSOCKEN_TYPES
} VEREIN_TRIKOT_RINGELSOCKEN_TYPE;

typedef enum
{
	VEREIN_KUERZL_UNKNOWN,
	VEREIN_KUERZL_KEINS,
	VEREIN_KUERZL_DER,
	VEREIN_KUERZL_DIE,
	NO_OF_VEREIN_KUERZL_TYPES
} VEREIN_KUERZL_TYPE;

typedef enum
{
	VEREIN_FANAUFKOMMEN_UNKNOWN,
	VEREIN_FANAUFKOMMEN_WAHRE_HORDEN,
	VEREIN_FANAUFKOMMEN_SEHR_HOCH,
	VEREIN_FANAUFKOMMEN_HOCH,
	VEREIN_FANAUFKOMMEN_DURCHSCHNITTLICH,
	VEREIN_FANAUFKOMMEN_BESCHEIDEN,
	VEREIN_FANAUFKOMMEN_AERMLICH,
	VEREIN_FANAUFKOMMEN_FANS,
	NO_OF_VEREIN_FANAUFKOMMEN_TYPES
} VEREIN_FANAUFKOMMEN_TYPE;

typedef enum
{
	VEREIN_ARTDERFANS_UNKNOWN,
	VEREIN_ARTDERFANS_NORMAL,
	VEREIN_ARTDERFANS_LAUTSTARK,
	VEREIN_ARTDERFANS_VERWOEHNT,
	VEREIN_ARTDERFANS_ANSPRUCHSVOLL,
	VEREIN_ARTDERFANS_TREU,
	VEREIN_ARTDERFANS_ERFOLGSHUNGRIG,
	VEREIN_ARTDERFANS_FRUSTRIERT,
	VEREIN_ARTDERFANS_EUPHORISCH,
	NO_OF_VEREIN_ARTDERFANS_TYPES
} VEREIN_ARTDERFANS_TYPE;

typedef enum
{
	VEREIN_VORSTAND_UNKNOWN,
	VEREIN_VORSTAND_PULVERFASS,
	VEREIN_VORSTAND_SCHLEUDERSITZ,
	VEREIN_VORSTAND_NERVOES,
	VEREIN_VORSTAND_NORMAL,
	VEREIN_VORSTAND_SOUVERAEN,
	VEREIN_VORSTAND_TREU,
	NO_OF_VEREIN_VORSTAND_TYPES
} VEREIN_VORSTAND_TYPE;

typedef enum
{
	VEREIN_OPPOSITION_UNKNOWN,
	VEREIN_OPPOSITION_NICHT_VORHANDEN,
	VEREIN_OPPOSITION_NUR_STUEMPER,
	VEREIN_OPPOSITION_FORMIERT_SICH,
	VEREIN_OPPOSITION_DURCHAUS_VORHANDEN,
	VEREIN_OPPOSITION_KONKURENZFAEHIG,
	VEREIN_OPPOSITION_SEHR_STARK,
	VEREIN_OPPOSITION_MAECHTIG_UND_KOMPETENT,
	NO_OF_VEREIN_OPPOSITION_TYPES
} VEREIN_OPPOSITION_TYPE;

typedef enum
{
	VEREIN_FINANZKRAFT_UNKNOWN,
	VEREIN_FINANZKRAFT_MINIMAL,
	VEREIN_FINANZKRAFT_SCHLECHT,
	VEREIN_FINANZKRAFT_WENIG,
	VEREIN_FINANZKRAFT_SOLIDE,
	VEREIN_FINANZKRAFT_GUT,
	VEREIN_FINANZKRAFT_REICH,
	VEREIN_FINANZKRAFT_GESEGNET,
	NO_OF_VEREIN_FINANZKRAFT_TYPES
} VEREIN_FINANZKRAFT_TYPE;

typedef enum
{
	VEREIN_HOOLIGANS_UNKNOWN,
	VEREIN_HOOLIGANS_NICHT_VORHANDEN,
	VEREIN_HOOLIGANS_WENIGE_UND_FEIGE,
	VEREIN_HOOLIGANS_EIN_PAAR_ABER_KRAEFTIGE,
	VEREIN_HOOLIGANS_VIELE_UND_SCHLIMME,
	NO_OF_VEREIN_HOOLIGANS_TYPES
} VEREIN_HOOLIGANS_TYPE;

typedef enum
{
	VEREIN_REGIONALLIGAAB2000_UNKNOWN,
	VEREIN_REGIONALLIGAAB2000_NORD,
	VEREIN_REGIONALLIGAAB2000_SUED,
	NO_OF_VEREIN_REGIONALLIGAAB2000_TYPES
} VEREIN_REGIONALLIGAAB2000_TYPE;


//////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////// FUNCTION FORWARD DECLARATIONS ///////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////

ENUM_VALUE_LIST& GetVereinEnumValueList (VEREIN_ENUM_TYPE, ENUM_VALUE_LIST&);
int GetVereinEnumValue (int, ENUM_VALUE_SIDE_TYPE, int);
std::string GetNameFromVereinEnumType (VEREIN_ENUM_TYPE);
std::string GetNameFromVereinTrikotFarbeType (int);
std::string GetNameFromVereinTrikotMusterType (int);
std::string GetNameFromVereinTrikotRingelsockenType (int);
std::string GetNameFromVereinKuerzlType (int);
std::string GetNameFromVereinFanaufkommenType (int);
std::string GetNameFromVereinArtDerFansType (int);
std::string GetNameFromVereinVorstandType (int);
std::string GetNameFromVereinOppositionType (int);
std::string GetNameFromVereinFinanzkraftType (int);
std::string GetNameFromVereinHooligansType (int);
std::string GetNameFromVereinRegionalligaAb2000Type (int);

int GetValueFromVereinBooleanType (VEREIN_BOOLEAN_TYPE);
std::string GetNameFromVereinBooleanType (VEREIN_BOOLEAN_TYPE);
